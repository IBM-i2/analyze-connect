{
	"info": {
		"_postman_id": "a1206ab8-64a8-4cbd-bef4-cc8f88b6d709",
		"name": "Connector Services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Acquire",
			"item": [
				{
					"name": "All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"conditions\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"boro_nm\",\r\n\t\t\t\t\"value\": \"QUEENS\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"law_cat_cd\",\r\n\t\t\t\t\"value\": \"FELONY\"\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{url}}/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Like This",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"seeds\": {\r\n\t\t\t\"entities\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\t\"PT10\": \"FELONY\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{url}}/find-like-this-complaint",
							"host": [
								"{{url}}"
							],
							"path": [
								"find-like-this-complaint"
							]
						}
					},
					"response": []
				},
				{
					"name": "Expand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"seeds\": {\r\n\t\t\t\"entities\": [\r\n\t\t\t\t{\r\n\t\t\t\t  \"sourceIds\": [ { \"type\": \"OI.DAOD\", \"key\": [\"\", \"Complaint: 346124117\", \"\"], \"itemTypeId\": \"ET1\" } ],\r\n\t\t\t\t  \"seedId\": \"52cf42d1-9661-4b83-8e7a-afaa2b3c6109\",\r\n\t\t\t\t  \"typeId\": \"ET1\",\r\n\t\t\t\t  \"properties\": {\r\n\t\t\t\t    \"PT1\": 346124117,\r\n\t\t\t\t    \"PT6\": \"COMPLETED\",\r\n\t\t\t\t    \"PT7\": 0,\r\n\t\t\t\t    \"PT9\": 341,\r\n\t\t\t\t    \"PT10\": \"MISDEMEANOR\",\r\n\t\t\t\t    \"PT11\": \"PETIT LARCENY\"\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{url}}/expand",
							"host": [
								"{{url}}"
							],
							"path": [
								"expand"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validate",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"conditions\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"boro_nm\",\r\n\t\t\t\t\"value\": \"QUEENS\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"law_cat_cd\",\r\n\t\t\t\t\"value\": \"FELONY\"\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{url}}/search/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"search",
								"validate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Async",
			"item": [
				{
					"name": "Acquire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.expect(response).to.have.property('queryId');\r",
									"pm.environment.set(\"queryId\", response.queryId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"conditions\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"duration\",\r\n\t\t\t\t\"value\": 10\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"shouldFail\",\r\n\t\t\t\t\"value\": false\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/async",
							"host": [
								"{{url}}"
							],
							"path": [
								"async"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/async/{{queryId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"async",
								"{{queryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Results",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/async/{{queryId}}/results",
							"host": [
								"{{url}}"
							],
							"path": [
								"async",
								"{{queryId}}",
								"results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete / Cancel",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/async/{{queryId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"async",
								"{{queryId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Config",
			"item": [
				{
					"name": "Config",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/config",
							"host": [
								"{{url}}"
							],
							"path": [
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Schema",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/schema",
							"host": [
								"{{url}}"
							],
							"path": [
								"schema"
							]
						}
					},
					"response": []
				},
				{
					"name": "Charting Schemes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/charting-schemes",
							"host": [
								"{{url}}"
							],
							"path": [
								"charting-schemes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Acquire",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/acquire",
							"host": [
								"{{url}}"
							],
							"path": [
								"acquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Async",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.expect(response).to.have.property('queryId');\r",
									"pm.environment.set(\"queryId\", response.queryId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"payload\": {\r\n\t\t\"conditions\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"duration\",\r\n\t\t\t\t\"value\": 10\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"shouldFail\",\r\n\t\t\t\t\"value\": false\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/async",
							"host": [
								"{{url}}"
							],
							"path": [
								"async"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (Username-Password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"authToken\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"foo\",\r\n    \"password\": \"foo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login/userpass",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"userpass"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (API Key)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"authToken\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apikey\": \"foo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login/apikey",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"apikey"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}